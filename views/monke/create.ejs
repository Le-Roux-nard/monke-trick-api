<!DOCTYPE html>
<html>

<head>
  <title>Monke Trick Generator</title>
  <link rel="icon" type="image/png" href="/static/monke/favicon.ico" sizes="96x96" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css" />
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Bitter:400,700" />
  <link rel="stylesheet" href="/static/monke/assets/css/styles.css" />
  <link rel="stylesheet" href="/static/monke/assets/css/Article-List.css" />
  <link rel="stylesheet" href="/static/monke/assets/css/Footer-Dark.css" />
  <link rel="stylesheet" href="/static/monke/assets/css/glassmorphism.css" />
  <link rel="stylesheet" href="/static/monke/assets/css/home.css" />

  <style>
    body {
      height: 100vh;
    }
  </style>
</head>

<body data-base_url="<%=baseUrl %>">
  <%- include('../partials/navbar.ejs') %>
  <div class="d-xl-flex flex-row justify-content-center align-content-center">
    <div class="glass">
      <h1 class="center">Monke Trick Generator</h1>
      <form class="monke-form w-90 center mt-5" method="post">
        <div class="monke-generator">
          <div class="ressource">
            <div class="inputBx">
              <input type="url" id="pictureInput" required name="picture" placeholder="" />
              <span>Picture link</span>
              <i class="fas fa-image"></i>
            </div>
            <img class="imagePlaceholder" src="/static/monke/assets/img/monke.png" />
          </div>
          <div class="ressource">
            <div class="inputBx">
              <input type="url" id="videoInput" name="video" required placeholder="" />
              <span>Youtube video link</span>
              <i class="fab fa-youtube"></i>
            </div>
            <video autoplay controls id="videoHolder" width="520" height="350" style="display: none">
              Your browser does not support the video tag.
            </video>
            <div id="youtubeHolder" class="imagePlaceholder"></div>
          </div>
        </div>
        <div class="splitter"></div>
        <div class="alerts center"></div>
        <div class="result w-50 center copyButtonContainer" id="resultDiv">
          <input type="text" placeholder="e" id="resultText" disabled class="copyButtonTarget" />
          <input type="button" class="copyButton" id="copyButton" value="Copy" onclick="navigator.clipboard.writeText(document.getElementById('resultText').value);" />
					<input type="button" class="submitButton center" id="submitButton" value="Submit" onclick="sendForm()" />
        </div>
    </div>
    </form>
  </div>
  </div>
  <script defer>
    //form part
    document.getElementById("videoInput").addEventListener("change", function() {
			if(this.value == "") return;
      var tmp_user_url = document.getElementById("videoInput").value;
      let videoHolder = document.getElementById("videoHolder");
      let youtubeHolder = document.getElementById("youtubeHolder");
      let regex =
        /(?:https?:)?(?:\/\/)?(?:[0-9A-Z-]+\.)?(?:youtu\.be\/|youtube(?:-nocookie)?\.com\S*?[^\w\s-])([\w-]{11})(?=[^\w-]|$)(?![?=&+%\w.-]*(?:['"][^<>]*>|<\/a>))[?=&+%\w.-]*/;
      let regexResult = regex.exec(tmp_user_url) ?? undefined;
      if (!!regexResult) {
        isYoutubeVideo = true;
        player?.loadVideoById(regexResult[1]);
      } else {
        isYoutubeVideo = false;
        videoHolder.src = tmp_user_url;
        player?.stopVideo();
        player?.clearVideo();
      }
      swapVideoPlayer();
    });

    function swapVideoPlayer() {
      let videoHolder = document.getElementById("videoHolder");
      let youtubeHolder = document.getElementById("youtubeHolder");
      if (isYoutubeVideo) {
        videoHolder.style.display = "none";
        youtubeHolder.style.display = "block";
      } else {
        videoHolder.style.display = "block";
        youtubeHolder.style.display = "none";
      }
    }

    document.getElementById("pictureInput").addEventListener("change", function() {
      var url = document.getElementById("pictureInput").value;
      let image = new Image();
      image.onload = () => {
        document.querySelector(".imagePlaceholder").src = url;
      };

      image.onerror = () => {
        this.setAttribute("isValid", false);
        document.querySelector(".imagePlaceholder").src = "https://cdn.icon-icons.com/icons2/2367/PNG/512/file_error_icon_143598.png";
      };

      image.src = url;
    });

    function sendForm() {
      console.log("send form");
      const payload = {
        picture: document.getElementById("pictureInput").value,
        video: document.getElementById("videoInput").value,
      };

      const xhr = new XMLHttpRequest();
      xhr.onload = function() {
        console.log(this.responseText);
        try {
          const response = JSON.parse(this.responseText);
          if (response.shortUrl) {
            let resultInput = document.getElementById("resultText");
            resultInput.value = response.shortUrl;
            resultInput.placeholder = response.shortUrl;
          }
        } catch (e) {
          let div = document.createElement("div");
          div.classList.add("alert", "alert-danger");
          div.innerText = this.responseText;
          document.querySelector(".alerts").innerHTML = div.outerHTML;
        }
      };
      let baseUrl = document.querySelector("body").dataset.base_url;
      console.log(baseUrl);
      console.log(`${baseUrl}/create`);
      xhr.open("POST", `${baseUrl ?? ""}/create`, true);
      xhr.setRequestHeader("Content-type", "application/json; charset=UTF-8");
      xhr.send(JSON.stringify(payload));
    }
  </script>
  <script>
    //youtube part
    var tag = document.createElement("script");

    tag.src = "https://www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName("script")[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    var player,
      playing = false;

    function onYouTubeIframeAPIReady() {
      player = new YT.Player("youtubeHolder", {
        width: 520,
        height: 350,
        // videoId: "GHAV07v382o",
        playerVars: {
          controls: 1,
          loop: 1,
          disablekb: 1,
          iv_load_policy: 3,
          rel: 0,
          showinfo: 0
        },
        events: {
          onReady: onPlayerReady,
        },
      });
    }

    function onPlayerReady(event) {
      player.stopVideo();
      player.clearVideo();
    }
  </script>
</body>

</html>